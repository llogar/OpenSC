#ifndef __CARD_ISOAPPLET_H
#define __CARD_ISOAPPLET_H

#define ISOAPPLET_VERSION_V0 0x0006
#define ISOAPPLET_VERSION_C7 0x0007
#define ISOAPPLET_VERSION_V1 0x0100

#define ISOAPPLET_API_FEATURE_EXT_APDU 0x0001
#define ISOAPPLET_API_FEATURE_SECURE_RANDOM 0x0002
#define ISOAPPLET_API_FEATURE_ECDSA_SHA1 0x0004
#define ISOAPPLET_API_FEATURE_RSA_4096 0x0008
#define ISOAPPLET_API_FEATURE_ECDSA_PRECOMPUTED_HASH 0x0010
#define ISOAPPLET_API_FEATURE_ECDH 0x0020
#define ISOAPPLET_API_FEATURE_IMPORT_EXPORT 0x0040
#define ISOAPPLET_API_FEATURE_ENABLE_IMPORT_EXPORT 0x0080
#define ISOAPPLET_API_FEATURE_RSA_PAD_NONE 0x0100
#define ISOAPPLET_API_FEATURE_V1_RSA_PSS_CARD 0x08
#define ISOAPPLET_API_FEATURE_V1_RSA_PSS 0x08000000
#define ISOAPPLET_API_FEATURE_V1_RSA_4096_CARD 0x20
#define ISOAPPLET_API_FEATURE_V1_RSA_4096 0x20000000

struct isoApplet_drv_data
{
	/* Save the current algorithm reference
	 * (ISOAPPLET_ALG_REF_ECDSA, ISOAPPLET_ALG_REF_RSA_PAD_NONE/PKCS1)
	 * to be able to distinguish between RSA and ECC operations.
	 * If ECC is being used, the signatures generated by the card
	 * have to be modified. */
	unsigned int sec_env_alg_ref;
	unsigned int sec_env_ec_field_length;
	unsigned int isoapplet_version;
	unsigned int isoapplet_features;
};

#define DRVDATA(card)	((struct isoApplet_drv_data *) ((card)->drv_data))

#endif